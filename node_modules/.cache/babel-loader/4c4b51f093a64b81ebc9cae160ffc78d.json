{"ast":null,"code":"import { increment, decrement } from \"./action\";\nconst initialState = {\n  count: 0\n};\n\nconst reducers = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case increment:\n      return { ...state,\n        count: state.count + action.payload\n      };\n\n    case decrement:\n      return { ...state,\n        count: state.count - action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducers;","map":{"version":3,"names":["increment","decrement","initialState","count","reducers","state","action","type","payload"],"sources":["/Users/musubimanagement/Downloads/react-redux-counter-main/src/redux/reducers.js"],"sourcesContent":["import { increment,decrement } from \"./action\";\n\nconst initialState={\n count:0\n}\n\nconst reducers=(state=initialState,action)=>{\n switch (action.type){\n  case increment:\n   return {\n    ...state,\n    count:state.count+action.payload\n   }\n  case decrement:\n   return {\n    ...state,\n    count:state.count-action.payload\n   }\n  default:\n   return state\n }\n}\nexport default reducers;"],"mappings":"AAAA,SAASA,SAAT,EAAmBC,SAAnB,QAAoC,UAApC;AAEA,MAAMC,YAAY,GAAC;EAClBC,KAAK,EAAC;AADY,CAAnB;;AAIA,MAAMC,QAAQ,GAAC,YAA6B;EAAA,IAA5BC,KAA4B,uEAAtBH,YAAsB;EAAA,IAATI,MAAS;;EAC3C,QAAQA,MAAM,CAACC,IAAf;IACC,KAAKP,SAAL;MACC,OAAO,EACN,GAAGK,KADG;QAENF,KAAK,EAACE,KAAK,CAACF,KAAN,GAAYG,MAAM,CAACE;MAFnB,CAAP;;IAID,KAAKP,SAAL;MACC,OAAO,EACN,GAAGI,KADG;QAENF,KAAK,EAACE,KAAK,CAACF,KAAN,GAAYG,MAAM,CAACE;MAFnB,CAAP;;IAID;MACC,OAAOH,KAAP;EAZF;AAcA,CAfD;;AAgBA,eAAeD,QAAf"},"metadata":{},"sourceType":"module"}